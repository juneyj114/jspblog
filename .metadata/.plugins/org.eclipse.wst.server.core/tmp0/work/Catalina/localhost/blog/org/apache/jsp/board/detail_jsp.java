/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.46
 * Generated at: 2019-11-13 01:21:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/include/nav.jsp", Long.valueOf(1573528937499L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1571711177890L));
    _jspx_dependants.put("jar:file:/C:/workspace/blog_project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/blog/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<!-- Required meta tags -->\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<link rel=\"icon\" href=\"/blog/img/favicon.png\" type=\"image/png\">\r\n");
      out.write("<title>Juney's Blog</title>\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/vendors/linericon/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/css/font-awesome.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/vendors/owl-carousel/owl.carousel.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/vendors/lightbox/simpleLightbox.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/vendors/nice-select/css/nice-select.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/vendors/animate-css/animate.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/vendors/jquery-ui/jquery-ui.css\">\r\n");
      out.write("<!-- main css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/css/style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/blog/css/responsive.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<!--================Header Menu Area =================-->\r\n");
      out.write("\t<header class=\"header_area\">\r\n");
      out.write("\t\t<div class=\"main_menu\">\r\n");
      out.write("\t\t\t<nav class=\"navbar navbar-expand-lg navbar-light\">\r\n");
      out.write("\t\t\t\t<div class=\"container box_1620\">\r\n");
      out.write("\t\t\t\t\t<!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("\t\t\t\t\t<a class=\"navbar-brand logo_h\" href=\"#\"><img src=\"/blog/img/logo.png\" alt=\"\"></a>\r\n");
      out.write("\t\t\t\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n");
      out.write("\t\t\t\t\t\taria-label=\"Toggle navigation\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span>\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t<!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("\t\t\t\t\t<div class=\"collapse navbar-collapse offset\" id=\"navbarSupportedContent\">\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"nav navbar-nav menu_nav\" id=\"mainUl\">\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"nav-item active\"><a class=\"nav-link\" href=\"/blog/index.jsp\">Home</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"/blog/board/write.jsp\">Posting</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"nav navbar-nav navbar-right header_social ml-auto\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</nav>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\tconst mainUl = document.querySelector(\"#mainUl\");\r\n");
      out.write("\t\t\t\tconst id = \"");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\t\t\t\tconst li1 = document.createElement(\"li\");\r\n");
      out.write("\t\t\t\tconst a1 = document.createElement(\"a\");\r\n");
      out.write("\t\t\t\tconst li2 = document.createElement(\"li\");\r\n");
      out.write("\t\t\t\tconst a2 = document.createElement(\"a\");\r\n");
      out.write("\t\t\t\tconsole.log(id);\r\n");
      out.write("\t\t\t\tif (id === null || id === \"\") {\r\n");
      out.write("\t\t\t\t\ta1.innerText = \"Join\";\r\n");
      out.write("\t\t\t\t\ta1.href = \"/blog/user/join.jsp\";\r\n");
      out.write("\t\t\t\t\ta2.innerText = \"Login\";\r\n");
      out.write("\t\t\t\t\ta2.href = \"/blog/user/login.jsp\";\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\ta1.innerText = \"Profile\";\r\n");
      out.write("\t\t\t\t\ta1.href = \"/blog/user/update.jsp\";\r\n");
      out.write("\t\t\t\t\ta2.innerText = \"Logout\";\r\n");
      out.write("\t\t\t\t\ta2.href = \"/blog/user?cmd=logout\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\ta1.classList.add(\"nav-link\");\r\n");
      out.write("\t\t\t\tli1.classList.add(\"nav-item\");\r\n");
      out.write("\t\t\t\tli1.appendChild(a1);\r\n");
      out.write("\t\t\t\tmainUl.appendChild(li1);\r\n");
      out.write("\t\t\t\ta2.classList.add(\"nav-link\");\r\n");
      out.write("\t\t\t\tli2.classList.add(\"nav-item\");\r\n");
      out.write("\t\t\t\tli2.appendChild(a2);\r\n");
      out.write("\t\t\t\tmainUl.appendChild(li2);\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--================Blog Area =================-->\r\n");
      out.write("<section class=\"blog_area single-post-area\">\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-lg-2\"></div>\r\n");
      out.write("\t\t\t<div class=\"col-lg-8\">\r\n");
      out.write("\t\t\t\t<div class=\"main_blog_details\">\r\n");
      out.write("\t\t\t\t\t<a href=\"#\"><h4>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h4></a>\r\n");
      out.write("\t\t\t\t\t<div class=\"user_details\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"float-left\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"float-right\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"media\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"media-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h5>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.user.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h5>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.createDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"d-flex\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.user.userProfile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"\" style=\"width:50px; height:50px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- 본문 시작 -->\r\n");
      out.write("\t\t\t\t\t<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t<!-- 본문 끝 -->\r\n");
      out.write("\t\t\t\t\t<hr />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 댓글 시작 -->\r\n");
      out.write("\t\t\t\t<div class=\"comments-area\">\r\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 대 댓글 아이템 시작 -->\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 대 댓글 아이템 끝 -->\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- 댓글 끝 -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<!-- 댓글 쓰기 시작 -->\r\n");
      out.write("\t\t\t\t<div class=\"comment-form\" style=\"margin-top: 0px;\">\r\n");
      out.write("\t\t\t\t\t<h4 style=\"margin-bottom: 20px\">Leave a Reply</h4>\r\n");
      out.write("\t\t\t\t\t<form id=\"writeCommentForm\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" id=\"commentUserId\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ sessionScope.user.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></input> <input type=\"hidden\" id=\"commentBoardId\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ board.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("></input> <input type=\"hidden\"></input>\r\n");
      out.write("\t\t\t\t\t\t\t<textarea id=\"commentText\" style=\"height: 60px\" class=\"form-control mb-10\" rows=\"2\" name=\"message\" placeholder=\"Messege\" onfocus=\"this.placeholder = ''\" onblur=\"this.placeholder = 'Messege'\"\r\n");
      out.write("\t\t\t\t\t\t\t\trequired=\"\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" onclick=\"writeComment(event)\" class=\"primary-btn submit_btn\" value=\"Post Commnet\"></input>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- 댓글 쓰기 끝 -->\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"col-lg-2\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</section>\r\n");
      out.write("<!--================Blog Area =================-->\r\n");
      out.write("\r\n");
      out.write("<!--================ start footer Area  =================-->\r\n");
      out.write("<footer class=\"footer-area p_120\">\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-lg-3  col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<div class=\"single-footer-widget\">\r\n");
      out.write("\t\t\t\t\t<h6 class=\"footer_title\">About Us</h6>\r\n");
      out.write("\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore dolore magna aliqua.</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-lg-4 col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<div class=\"single-footer-widget\">\r\n");
      out.write("\t\t\t\t\t<h6 class=\"footer_title\">Newsletter</h6>\r\n");
      out.write("\t\t\t\t\t<p>Stay updated with our latest trends</p>\r\n");
      out.write("\t\t\t\t\t<div id=\"mc_embed_signup\">\r\n");
      out.write("\t\t\t\t\t\t<form target=\"_blank\" action=\"https://spondonit.us12.list-manage.com/subscribe/post?u=1462626880ade1ac87bd9c93a&amp;id=92a4423d01\" method=\"get\" class=\"subscribe_form relative\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group d-flex flex-row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input name=\"EMAIL\" placeholder=\"Email Address\" onfocus=\"this.placeholder = ''\" onblur=\"this.placeholder = 'Email Address '\" required=\"\" type=\"email\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn sub-btn\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<span class=\"lnr lnr-arrow-right\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"mt-10 info\"></div>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-lg-3 col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<div class=\"single-footer-widget instafeed\">\r\n");
      out.write("\t\t\t\t\t<h6 class=\"footer_title\">Instagram Feed</h6>\r\n");
      out.write("\t\t\t\t\t<ul class=\"list instafeed d-flex flex-wrap\">\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-01.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-02.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-03.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-04.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-05.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-06.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-07.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"img/instagram/Image-08.jpg\" alt=\"\"></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-lg-2 col-md-6 col-sm-6\">\r\n");
      out.write("\t\t\t\t<div class=\"single-footer-widget f_social_wd\">\r\n");
      out.write("\t\t\t\t\t<h6 class=\"footer_title\">Follow Us</h6>\r\n");
      out.write("\t\t\t\t\t<p>Let us be social</p>\r\n");
      out.write("\t\t\t\t\t<div class=\"f_social\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\"><i class=\"fa fa-facebook\"></i></a> <a href=\"#\"><i class=\"fa fa-twitter\"></i></a> <a href=\"#\"><i class=\"fa fa-dribbble\"></i></a> <a href=\"#\"><i class=\"fa fa-behance\"></i></a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"row footer-bottom d-flex justify-content-between align-items-center\">\r\n");
      out.write("\t\t\t<p class=\"col-lg-12 footer-text text-center\">\r\n");
      out.write("\t\t\t\t<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->\r\n");
      out.write("\t\t\t\tCopyright &copy;\r\n");
      out.write("\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\tdocument.write(new Date().getFullYear());\r\n");
      out.write("\t\t\t\t</script>\r\n");
      out.write("\t\t\t\tAll rights reserved | This template is made with <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i> by <a href=\"https://colorlib.com\" target=\"_blank\">Colorlib</a>\r\n");
      out.write("\t\t\t\t<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</footer>\r\n");
      out.write("<!--================ End footer Area  =================-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Optional JavaScript -->\r\n");
      out.write("<!-- jQuery first, then Popper.js, then Bootstrap JS -->\r\n");
      out.write("<script src=\"js/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<script src=\"js/popper.js\"></script>\r\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"js/stellar.js\"></script>\r\n");
      out.write("<script src=\"vendors/lightbox/simpleLightbox.min.js\"></script>\r\n");
      out.write("<script src=\"vendors/nice-select/js/jquery.nice-select.min.js\"></script>\r\n");
      out.write("<script src=\"vendors/isotope/imagesloaded.pkgd.min.js\"></script>\r\n");
      out.write("<script src=\"vendors/isotope/isotope-min.js\"></script>\r\n");
      out.write("<script src=\"vendors/owl-carousel/owl.carousel.min.js\"></script>\r\n");
      out.write("<script src=\"vendors/jquery-ui/jquery-ui.js\"></script>\r\n");
      out.write("<script src=\"js/jquery.ajaxchimp.min.js\"></script>\r\n");
      out.write("<script src=\"js/mail-script.js\"></script>\r\n");
      out.write("<script src=\"js/theme.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("async function deleteReply(commentId) {\r\n");
      out.write("    const fetchData = await fetch(\"/blog/comment?cmd=delete\", {\r\n");
      out.write("      method: \"POST\",\r\n");
      out.write("      body: commentId,\r\n");
      out.write("      headers: {\r\n");
      out.write("        \"Content-type\": \"text/plain; charset=UTF-8\"\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("    const result = await fetchData.text();\r\n");
      out.write("    if (result === \"1\") {\r\n");
      out.write("      console.log(\"delete!\");\r\n");
      out.write("      $(\"#reply-\" + commentId).remove();\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("async function showReply(commentId) {\r\n");
      out.write("    const replyDiv = document.querySelector(\"#childReply-\" + commentId);\r\n");
      out.write("    console.log(replyDiv);\r\n");
      out.write("    if (replyDiv == null) {\r\n");
      out.write("      const fetchData = await fetch(\"/blog/comment?cmd=show\", {\r\n");
      out.write("        method: \"POST\",\r\n");
      out.write("        body: commentId,\r\n");
      out.write("        headers: {\r\n");
      out.write("          \"Content-type\": \"application/json; charset=UTF-8\"\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("      const replies = await fetchData.json();\r\n");
      out.write("      const childReply = document.createElement(\"div\");\r\n");
      out.write("      childReply.id = \"childReply-\" + commentId;\r\n");
      out.write("      $(\"#reply-\" + commentId).append(childReply);\r\n");
      out.write("      for (const reply of replies) {\r\n");
      out.write("        const {\r\n");
      out.write("          id,\r\n");
      out.write("          user: { username, userProfile },\r\n");
      out.write("          content,\r\n");
      out.write("          commentId,\r\n");
      out.write("          createDate\r\n");
      out.write("        } = reply;\r\n");
      out.write("        console.log(content);\r\n");
      out.write("        const div = document.createElement(\"div\");\r\n");
      out.write("        div.innerHTML =\r\n");
      out.write("          \"<br /><div style='margin-left:50px' class='reply-\" +\r\n");
      out.write("          id +\r\n");
      out.write("          \"'><div id='reply-\" +\r\n");
      out.write("          id +\r\n");
      out.write("          \"' style='flex-wrap: wrap' class='single-comment justify-content-between d-flex'><div class='user justify-content-between d-flex'><div class='thumb'><img src='\"+userProfile+\"' alt='' style='width:50px; height:50px;'></div><div class='desc'><h5><a href='#'>\" +\r\n");
      out.write("          username +\r\n");
      out.write("          \"</a></h5><p class='date'>\" +\r\n");
      out.write("          createDate +\r\n");
      out.write("          \"</p><p class='comment'>\" +\r\n");
      out.write("          content +\r\n");
      out.write("          \"</p></div></div><div class='reply-btn'><button class='btn-reply text-uppercase' onclick='deleteReply(\" +\r\n");
      out.write("          id +\r\n");
      out.write("          \")'>❌</button></div><div class='reply-btn'><button onclick='showReply(\" +\r\n");
      out.write("          id +\r\n");
      out.write("          \")' class='btn-reply text-uppercase'>댓글보기</button><button id='btnWriteComment-\" +\r\n");
      out.write("          id +\r\n");
      out.write("          \"' class='btn-reply text-uppercase' onclick='writeReply(\" +\r\n");
      out.write("          id +\r\n");
      out.write("          \")'>댓글쓰기</button></div></div></div>\";\r\n");
      out.write("        childReply.append(div);\r\n");
      out.write("      }\r\n");
      out.write("    } else {\r\n");
      out.write("      $(\"#childReply-\" + commentId).remove();\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("  function writeReply(id) {\r\n");
      out.write("    const btnWriteComment = document.querySelector(\r\n");
      out.write("      \"#btnWriteComment-\" + id\r\n");
      out.write("    );\r\n");
      out.write("    const writeCommentDiv = document.querySelector(\".writeComment\" + id);\r\n");
      out.write("    if (writeCommentDiv === null) {\r\n");
      out.write("   \t  showReply(id);\r\n");
      out.write("      const comment = document.querySelector(\"#reply-\" + id);\r\n");
      out.write("      const div = document.createElement(\"div\");\r\n");
      out.write("      div.className = \"writeComment\" + id;\r\n");
      out.write("      div.style = \"width: 100%\";\r\n");
      out.write("      div.innerHTML =\r\n");
      out.write("        \"<h4 style='margin-bottom:20px'>Leave a Reply</h4><form id='reply-submit'><div class='form-group'><textarea id = 'commentText' style='height:60px' class='form-control mb-10' rows='2' name='content' placeholder='Messege' required=''></textarea></div><button onclick='postReply(event, \"+id+\")' class='primary-btn submit_btn'>Post Reply</button></form>\";\r\n");
      out.write("      comment.append(div);\r\n");
      out.write("      btnWriteComment.innerText = \"댓글닫기\";\r\n");
      out.write("      isReply = true;\r\n");
      out.write("    } else {\r\n");
      out.write("      showReply(id);\r\n");
      out.write("      $(\".writeComment\" + id).remove();\r\n");
      out.write("      btnWriteComment.innerText = \"댓글쓰기\";\r\n");
      out.write("      isReply = false;\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("  async function postReply(event, commentId){\r\n");
      out.write("\t  event.preventDefault();\r\n");
      out.write("      const commentText = document.querySelector(\"#commentText\");\r\n");
      out.write("      const { value: content } = commentText;\r\n");
      out.write("      const commentUserId = document.querySelector(\"#commentUserId\");\r\n");
      out.write("      const { value: userId } = commentUserId;\r\n");
      out.write("      const commentBoardId = document.querySelector(\"#commentBoardId\");\r\n");
      out.write("      const { value: boardId } = commentBoardId;\r\n");
      out.write("      const comment = {\r\n");
      out.write("        content,\r\n");
      out.write("        userId,\r\n");
      out.write("        boardId,\r\n");
      out.write("        commentId\r\n");
      out.write("      };\r\n");
      out.write("      const response = await fetch(\"/blog/comment?cmd=write\", {\r\n");
      out.write("        method: \"POST\",\r\n");
      out.write("        body: JSON.stringify(comment),\r\n");
      out.write("        header: {\r\n");
      out.write("          \"Content-type\": \"application/json; charset=UTF-8\"\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("      const resData = await response.json();\r\n");
      out.write("      console.log(\"resData:\", resData);\r\n");
      out.write("      const {\r\n");
      out.write("        responseData: { status },\r\n");
      out.write("        id,\r\n");
      out.write("        user: { username, userProfile },\r\n");
      out.write("        createDate\r\n");
      out.write("      } = resData;\r\n");
      out.write("      if(status === \"OK\"){\r\n");
      out.write("        const div = document.createElement(\"div\");\r\n");
      out.write("        div.innerHTML = \"<div style='margin-left: 50px;' class='comment-list' id='comment-\"+id+\"'><div class='single-comment justify-content-between d-flex'><div class='user justify-content-between d-flex'><div class='thumb'><img src='\"+userProfile+\"' alt='' style='height:50px; width:50px;'></div><div class='desc'><h5><a href='#'>\"+username+\"</a></h5><p class='date'>\"+createDate+\"</p><p class='comment'>\"+content+\"</p></div></div><div class='reply-btn'><button class='btn-reply text-uppercase' onclick='deleteReply(\"+id+\")'>❌</button></div><div class='reply-btn'><button class='btn-reply text-uppercase'>댓글보기</button><button id='btnWriteComment-\"+id+\"' class='btn-reply text-uppercase' onclick='writeReply(\"+id+\")'>댓글쓰기</button></div></div></div>\";\r\n");
      out.write("        console.log(div);\r\n");
      out.write("        $(\"#childReply-\"+commentId).append(div);\r\n");
      out.write("        \r\n");
      out.write("      }\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  async function writeComment(event) {\r\n");
      out.write("      event.preventDefault();\r\n");
      out.write("      const commentText = document.querySelector(\"#commentText\");\r\n");
      out.write("      const { value: content } = commentText;\r\n");
      out.write("      const commentUserId = document.querySelector(\"#commentUserId\");\r\n");
      out.write("      const { value: userId } = commentUserId;\r\n");
      out.write("      const commentBoardId = document.querySelector(\"#commentBoardId\");\r\n");
      out.write("      const { value: boardId } = commentBoardId;\r\n");
      out.write("      const comment = {\r\n");
      out.write("        content,\r\n");
      out.write("        userId,\r\n");
      out.write("        boardId\r\n");
      out.write("      };\r\n");
      out.write("      const response = await fetch(\"/blog/comment?cmd=write\", {\r\n");
      out.write("        method: \"POST\",\r\n");
      out.write("        body: JSON.stringify(comment),\r\n");
      out.write("        header: {\r\n");
      out.write("          \"Content-type\": \"application/json; charset=UTF-8\"\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("      const resData = await response.json();\r\n");
      out.write("      const {\r\n");
      out.write("        responseData: { status },\r\n");
      out.write("        id,\r\n");
      out.write("        user: { username, userProfile },\r\n");
      out.write("        createDate\r\n");
      out.write("      } = resData;\r\n");
      out.write("      if(status === \"OK\"){\r\n");
      out.write("        const div = document.createElement(\"div\");\r\n");
      out.write("        div.innerHTML = \"<div class='comment-list' id='comment-\"+id+\"'><div class='single-comment justify-content-between d-flex'><div class='user justify-content-between d-flex'><div class='thumb'><img src='\"+userProfile+\"' alt=''style='width: 50px; height: 50px;'></div><div class='desc'><h5><a href='#'>\"+username+\"</a></h5><p class='date'>\"+createDate+\"</p><p class='comment'>\"+content+\"</p></div></div><div class='reply-btn'><button class='btn-reply text-uppercase' onclick='deleteReply(\"+id+\")'>❌</button></div><div class='reply-btn'><button class='btn-reply text-uppercase'>댓글보기</button><button id='btnWriteComment-\"+id+\"' class='btn-reply text-uppercase' onclick='writeReply(\"+id+\")'>댓글쓰기</button></div></div></div>\";\r\n");
      out.write("        console.log(div);\r\n");
      out.write("        $(\".comments-area\").append(div);\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /include/nav.jsp(60,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sessionScope.user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest_005fnobody.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t<a href=\"/blog/user/userProfileForm.jsp\"><img src=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user.userProfile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" style=\"height: 40px; border-radius: 100%; width: 40px;\" /></a>\r\n");
          out.write("\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /include/nav.jsp(72,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /board/detail.jsp(16,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.userId eq sessionScope.user.id}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t<a href=\"/blog/board?cmd=updateForm&id=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">update</a>\r\n");
          out.write("\t\t\t\t\t\t\t\t<a href=\"/blog/board?cmd=delete&id=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">delete</a>\r\n");
          out.write("\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /board/detail.jsp(41,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("comment");
      // /board/detail.jsp(41,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/board/detail.jsp(41,5) '${comments}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${comments}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<!-- 댓글 아이템 시작 -->\r\n");
            out.write("\t\t\t\t\t\t<div class=\"comment-list\" id=\"comment-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("\t\t\t\t\t\t\t<div id=\"reply-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" style=\"flex-wrap: wrap\" class=\"single-comment justify-content-between d-flex\">\r\n");
            out.write("\t\t\t\t\t\t\t\t<div class=\"user justify-content-between d-flex\">\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<div class=\"thumb\">\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t<img src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.user.userProfile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" alt=\"\" style=\"width:50px; height:50px;\">\r\n");
            out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<div class=\"desc\">\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t<h5>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t<a href=\"#\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ comment.user.username }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t</h5>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t<p class=\"date\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ comment.createDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t<p class=\"comment\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ comment.content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t\t\t\t<div class=\"reply-btn\">\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn-reply text-uppercase\" onclick=\"deleteReply(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\">❌</button>\r\n");
            out.write("\t\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t\t\t\t<div class=\"reply-btn\">\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<button onclick = \"showReply(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\" class=\"btn-reply text-uppercase\">댓글보기</button>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t<button id=\"btnWriteComment-");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ comment.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" class=\"btn-reply text-uppercase\" onclick=\"writeReply(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${comment.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\">댓글쓰기</button>\r\n");
            out.write("\t\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t\t\t</div>\r\n");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<!-- 댓글 아이템 끝 -->\r\n");
            out.write("\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
